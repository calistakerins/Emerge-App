@page "/createAccount"
@using System.Text
@using System.Net.Mime
@using System.Text.Json
@using emerge.Data
@using emerge.Controller
@using Newtonsoft.Json;
@inject NavigationManager navigation;

<MudAppBar Class="pb-2 pt-2" Fixed="false" Elevation="0">
    <MudIconButton Icon="@Icons.Filled.ArrowBack" Href="/" Color="Color.Inherit" Edge="Edge.Start" />
    <MudText Typo="Typo.h5">Create New Account</MudText>
</MudAppBar>

<p>
    <MudContainer Class="d-flex justify-center align-center"><MudImage Src="images/profile_pic.png" Alt="profile pic" /></MudContainer>
</p>
<MudContainer Class="d-flex justify-center align-center">
    @if (CurrentProfile.currentUser.Admin)
    {
        <MudText Typo="Typo.h5" Color="Color.Primary">Administrator</MudText>
    }
    @if (!CurrentProfile.currentUser.Admin)
    {
        <MudText Typo="Typo.h5" Color="Color.Primary">User</MudText>
    }
</MudContainer>

    <MudContainer Class="d-flex justify-center align-center rounded-xl">
        <MudItem xs="12" sm="6" md="4">
            <MudStack Spacing=1>
                <MudTextField @bind-Value="Name" FullWidth="true" Label="Name" Variant="Variant.Outlined" Required="true"></MudTextField>
                <MudSpacer />
                <MudTextField @bind-Value="Username" FullWidth="true" Label="Username" Variant="Variant.Outlined" Required="true"></MudTextField>
                <MudSpacer />
                <MudTextField @bind-Value="Email" FullWidth="true" Label="Email" Variant="Variant.Outlined" Required="true"></MudTextField>
                <MudSpacer />
                <MudTextField @bind-Value="Password" FullWidth="true" Label="Password" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password" Required="true"></MudTextField>
                <MudSpacer />
                <MudSelect T="Department" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))" Label="Departments" MultiSelection="true" @bind-Value="partValue" @bind-SelectedValues="options" Variant="Variant.Outlined">
                    @foreach (var dept in dptController.getDeptList())
                    {
                        <MudSelectItem T="Department" Value="@dept">@dept.Title</MudSelectItem>
                    }
                </MudSelect>
                <MudSpacer />
                <MudTextField @bind-Value="Zipcode" FullWidth="true" Label="Zipcode" Variant="Variant.Outlined" Required="true"></MudTextField>
                <MudSpacer />
            </MudStack>
        </MudItem>
    </MudContainer>

    <MudContainer Class="d-flex justify-center align-center pt-2">
        <MudButton Disabled="@_processing"
                   OnClick="AddProfile"
                   Variant="Variant.Filled"
                   Color="Color.Primary">Sign Up</MudButton>
    </MudContainer>


    @code {
        public string Name { get; set; }
        public string Username { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public string Zipcode { get; set; }
        public bool Administrator { get; set; } = true;
        public List<NewsAlert> NewsPosted = new List<NewsAlert>();
        private bool _processing = false;
        private static DepartmentController dptController = new DepartmentController();
        private Department partValue { get; set; } = new Department();
        private IEnumerable<Department> options { get; set; } = new HashSet<Department>();
        private bool multiselectionTextChoice;

        private async Task AddProfile()
        {
            _processing = true;

            if (CurrentProfile.currentUser.Admin) Administrator = true;
            else Administrator = false;

            //harrisons azure
            // HttpClient client = new HttpClient { BaseAddress = new Uri("https://emerge-azure.azurewebsites.net/api/profile") };

            //megans azure
            HttpClient client = new HttpClient { BaseAddress = new Uri("https://emergeproj.azurewebsites.net/api/profile?") };
            //HttpClient client = new HttpClient { BaseAddress = new Uri("http://localhost:7071/api/profile") };

            HttpResponseMessage response = null;

            var payload = new UserProfile()
            {
                Name = Name,
                Username = Username,
                Password = Password,
                Email = Email,
                Zipcode = Zipcode,
                Admin = Administrator,
                Alerts = NewsPosted,
                Following = options.ToList()
            };

            if (payload.Username != null && payload.Password != null && payload.Name != null && payload.Email != null)
            {
                var payloadString = new StringContent(System.Text.Json.JsonSerializer.Serialize(payload), Encoding.UTF8, MediaTypeNames.Application.Json);

                response = await client.PostAsync(client.BaseAddress, payloadString);

                CurrentProfile.currentUser = payload;
                CurrentProfile.loggedIn = true;

                if (CurrentProfile.currentUser.Admin) navigation.NavigateTo("/adminprofile");
                else navigation.NavigateTo("/profile");
            }

            _processing = false;
        }

        bool isShow;
        InputType PasswordInput = InputType.Password;
        string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

        void ButtonTestclick()
        {
            @if (isShow)
            {
                isShow = false;
                PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
                PasswordInput = InputType.Password;
            }
            else
            {
                isShow = true;
                PasswordInputIcon = Icons.Material.Filled.Visibility;
                PasswordInput = InputType.Text;
            }
        }

        private string GetMultiSelectionText(List<string> selectedValues)
        {
            return $"{selectedValues.Count} department{(selectedValues.Count > 1 ? "s have" : " has")} been selected";
        }

    }

