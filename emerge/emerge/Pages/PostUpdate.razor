@page "/postupdate/{alertid}"
@using emerge.Data
@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Net.Mime

@*<DataAnnotationsValidator />*@
<AdminNavBar />
<MudMainContent>
    <MudContainer MaxWidth="MaxWidth.Medium">
        <MudButton Variant="Variant.Outlined" Href="/adminprofile">Back</MudButton>
        <MudText Typo="Typo.h3" Class="pb-8 pt-8" Color="Color.Primary">Post Update</MudText>

        <MudCard>
            <MudCardContent>
                <MudTextField Label="UpdateDescription" @bind-Value="UpdateDescription" Variant="Variant.Filled" Class="pt-4 pb-4" />
                <MudNumericField Label="UpdatePriority" @bind-Value="UpdatePriority" Variant="Variant.Filled" Min="0" Max="5" Class="pt-4 pb-4" />
            </MudCardContent>
            <MudCardActions>
                <MudButton @onclick="@AddUpdate" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto mr-auto mb-4">Post Update</MudButton>
            </MudCardActions>
        </MudCard>

    </MudContainer>
</MudMainContent>

@code {

    public DateTime UpdateTime { get; set; } = DateTime.Now;
    public string UpdateDescription { get; set; }
    public int UpdatePriority { get; set; }
    private bool _processing = false;
    [Parameter]
    public string alertid { get; set; }


    private async Task AddUpdate()
    {
        _processing = true;

        string updateURI = "https://emergeproj.azurewebsites.net/api/newsalert/" + alertid + "?";
        
        HttpClient client = new HttpClient { BaseAddress = new Uri(updateURI) };


        HttpResponseMessage response = null;

        var payload = new UpdateInfo()
        {
            UpdateTime = UpdateTime,
            UpdateDescription = UpdateDescription,
            UpdatePriority = UpdatePriority
        };

        var payloadString = new StringContent(System.Text.Json.JsonSerializer.Serialize(payload), Encoding.UTF8, MediaTypeNames.Application.Json);

        response = await client.PatchAsync(client.BaseAddress, payloadString);
        // PostAsync(client.BaseAddress, payloadString);

        _processing = false;
    }

}
