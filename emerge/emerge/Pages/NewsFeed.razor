@page "/news"
@inherits LayoutComponentBase
@using emerge.Data
@using emerge.Controller

@if (feedView)
{
    //Newsfeed

    <MudContainer Class="mt-16">

        <MudDivider DividerType="DividerType.Middle" Class="my-20" />

        @foreach (var alertInfo in feedController.getAlertList()) //loop through alert list
        {
            <MudCard Class="ma-8 pa-4 rounded-xl" Outlined="true" Style="@($"color:{Colors.Shades.Black}; height: 30%; width: 80%")"
                     @onclick="() => OnClick(alertInfo)">

                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4" Style="font-weight:bold">@alertInfo.Title</MudText>
                        <MudText Typo="Typo.h6">Priority: 5</MudText>
                        <MudText Typo="Typo.h6" Class="mt-4">@alertInfo.Author</MudText>
                        <MudText Typo="Typo.body1">
                            description...
                        </MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudText Typo="Typo.subtitle2" Class="ms-4">
                            @alertInfo.Time.ToString("MM/dd/yyyy")
                        </MudText>
                        <MudText Typo="Typo.subtitle2" Class="ms-4">
                            @alertInfo.Time.ToString("HH:mm")
                        </MudText>
                    </CardHeaderActions>
                </MudCardHeader>

            </MudCard>

            @foreach (var update in alertInfo.Updates) //loop through updates
            {

                <MudCard Class="ma-8 pa-4 rounded-xl" Style="@($"color:{Colors.Shades.Black}; height: 15%; width: 70%")">
                    <MudCardHeader>
                        <CardHeaderContent>

                            <MudText Typo="Typo.h6">UPDATE</MudText>
                            <MudText Typo="Typo.subtitle1">@update.Description</MudText>

                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudText Typo="Typo.subtitle2" Class="ms-4">
                                @update.DateTime.ToString("MM/dd/yyyy")
                            </MudText>
                            <MudText Typo="Typo.subtitle2" Class="ms-4">
                                @update.DateTime.ToString("HH:mm")
                            </MudText>
                        </CardHeaderActions>
                    </MudCardHeader>
                </MudCard>
            }
        }
    </MudContainer>

}
else
{
    //View Alert
    <MudContainer Class="mt-16">

        <MudButton Variant="Variant.Outlined" @onclick="returnToFeed">Alerts</MudButton>
        <div>
            <MudText Typo="Typo.h3" Class="mt-5"><b>@currentAlert.Title</b></MudText>
            <MudText Typo="Typo.h5">PRIORITY: 5</MudText>
            <MudText Typo="Typo.body1">@currentAlert.Author</MudText>
            <MudText Typo="Typo.body1">@currentAlert.Time.ToString("MM/dd/yyyy HH:mm")</MudText>
            <MudPaper Class="pa-6 ma-4" Elevation="3">
                <MudText Typo="Typo.subtitle1">ncidunt turpis. In laoreet turpis leo, ut laoreet leo blandit feugiat. </MudText>
            </MudPaper>
        </div>
        <div>
            <MudText Typo="Typo.h4" Class="mt-5"><b>Updates</b></MudText>
            @foreach (var u in currentAlert.Updates)
            {
                <MudPaper Class="pa-6 ma-4">
                    <MudText Typo="Typo.subtitle2" Class="ms-4">
                        @currentAlert.Time.ToString("MM/dd/yyyy")
                    </MudText>
                    <MudText Typo="Typo.subtitle2" Class="ms-4">
                        @currentAlert.Time.ToString("HH:mm")
                    </MudText>
                    <MudText Typo="Typo.subtitle1">@u.Description</MudText>
                </MudPaper>
            }
        </div>

    </MudContainer>
}


@code {
    public static AlertInfo currentAlert;
    private MudTheme Theme = new MudTheme();
    private NewsFeedController feedController = new NewsFeedController();
    private bool feedView = true;

    private void OnClick(AlertInfo alertInfo)
    {
        feedView = false;
        currentAlert = alertInfo;
        StateHasChanged();
    }

    private void returnToFeed()
    {
        feedView = true;
        StateHasChanged();
    }


}